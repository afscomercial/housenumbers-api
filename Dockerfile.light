# Alternative lighter Dockerfile for Railway
FROM node:22-slim as builder

# Set working directory
WORKDIR /app

# Install minimal build dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    make \
    g++ \
    cmake \
    && rm -rf /var/lib/apt/lists/*

# Copy package files
COPY package*.json ./
COPY tsconfig.json ./

# Install dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy source code
COPY src ./src

# Build the application  
RUN npm run build

# Production stage
FROM node:22-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Create non-root user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nodejs

# Copy package files
COPY package*.json ./

# Install only production dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy built application
COPY --from=builder /app/dist ./dist

# Copy ESM subprocess script
COPY src/infrastructure/llm/llama-subprocess.mjs ./dist/infrastructure/llm/

# Create directories for data and models
RUN mkdir -p data models && \
    chown -R nodejs:nodejs /app

# Set environment variables
ENV NODE_ENV=production
ENV PORT=3000
ENV DATABASE_PATH=./data/database.sqlite
ENV MODEL_PATH=./models/llama-2-7b-chat.Q4_K_S.gguf

# Expose port
EXPOSE 3000

# Switch to non-root user
USER nodejs

# Start the application
CMD ["node", "dist/index.js"]